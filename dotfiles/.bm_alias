# ======================================================================================================
# ===  bmilcs: aliases  ================================================================================
# ======================================================================================================

#----  github  -----------------------------------------------------------------------------------------
# scripts & dotfiles
	alias upp='
	rm -rf ~/_bmilcs ~/.bm* ~/.inputr* 
	mkdir ~/_bmilcs
	git clone https://github.com/bmilcs/linux.git ~/_bmilcs 
	chmod -R +x ~/_bmilcs/* 
  source ~/_bmilcs/dotfiles/install.sh
	source ~/.bashrc
	'
	alias mine="/opt/minecraft/tools/mcrcon/mcrcon -H 127.0.0.1 -P 25575 -p nFkA_vKG8FTP2v@K9YdPA6utw -t"
# debian script
	alias ideb="sudo /bin/bash ~/_bmilcs/script/debian.sh"
# list customizations
	alias a="alias | sed 's/=.*//'"
	alias func="declare -f | grep '^[a-z].* ()' | sed 's/{$//'"
	alias paths='echo -e ${PATH//:/\\n}'
  
#----  file sharing  -----------------------------------------------------------------------------------
	alias infs="sudo apt install nfs-kernel-server && sudo echo \'#path/to/dir          10.0.0.0/8(ro,sync)\' >> /etc/exports && sudo nano /etc/exports"
	alias nfs='sudo nano /etc/exports'
	alias nfsr='sudo systemctl restart nfs-kernel-server'
  alias fstab='sudo nano /etc/fstab'
	alias ismb='sudo apt install samba
	# sudo sed -i '#         valid users = bmilcs' /etc/samba/smb.conf
	# sudo sed -i '#         guest ok = no' /etc/samba/smb.conf
	# sudo sed -i '#         read only = no' /etc/samba/smb.conf
	# sudo sed -i '#         browseable = yes' /etc/samba/smb.conf
	# sudo sed -i '#         path = /home/bmilcs/docker' /etc/samba/smb.conf
	# sudo sed -i '#         comment = docker vm config files' /etc/samba/smb.conf
	# sudo sed -i '# [docker]' /etc/samba/smb.conf
	# sudo sed -i '#' /etc/samba/smb.conf
	# sudo sed -i '#       hosts allow = 127.0.0.1/8 192.168.1.0/24' /etc/samba/smb.conf
	# sudo sed -i '#       interfaces = 192.168.1.0/24 eth0' /etc/samba/smb.conf
	# sudo sed -i '#       workgroup = BM' /etc/samba/smb.conf
	# sudo sed -i '1# B M I L C S'' /etc/samba/smb.conf
	# sudo nano /etc/samba/smb.conf
	'
	alias smb='sudo nano /etc/samba/smb.conf'
#----  network  ----------------------------------------------------------------------------------------
	alias up='
	echo && echo "==================================================================================================="
	echo "===  bmilcs update script  ========================================================================"
	echo "==================================================================================================="
	echo && echo "----  apt-get update  -------------------------------------------------------------------------" && echo
	sudo apt-get update -y
	echo && echo "----  apt-get dist-upgrade  -------------------------------------------------------------------" && echo
	sudo apt-get dist-upgrade -y
	echo && echo "----  apt-get  autoclean  ---------------------------------------------------------------------" && echo
	sudo apt-get autoclean -y && 
	echo && echo "----  apt-get purge  --------------------------------------------------------------------------" && echo
	sudo apt-get purge -y
  echo && echo "----  bmilcs linux git  -----------------------------------------------------------------------" && echo
	upp
	'
	alias rnet="sudo /etc/init.d/networking restart"
	alias enet="sudo nano /etc/network/interfaces"
#----  unattended-upgrades  ----------------------------------------------------------------------------
# run now
	alias uur="sudo unattended-upgrade -d"
# list updates applied
	alias uul="sudo cat /var/log/unattended-upgrades/unattended-upgrades.log | grep applying"
#----  file/dir navigation  ----------------------------------------------------------------------------
	alias c="clear"
	alias l="ls -hli --group-directories-first"		   # List in long format, include dotfiles
	alias ll="ls -hlni --group-directories-first"       # List in long format, include dotfiles
	alias lll="ls -hlni --group-directories-first"       # List in long format, include dotfiles
	alias pid="cat /etc/passwd"
	alias ld="ls -ld */"   # List in long format, only directories
	alias bm="su bmilcs"	# only while root
	alias rt="sudo -s"
	alias rd="cd / && c && l"
	alias h="cd ~ && c && l"
	alias ..="cd ..&& c && l"
	alias ...="cd ../.. && c && l"
	alias ....="cd ../../.. && c && l"
#----  bmilcs docker  ----------------------------------------------------------------------------------
# nav to docker volumes
	alias ddir='cd ~/docker'
# remove all containers
	alias drmc='docker rm $(docker ps -a -q)'
# remove all images
	alias drmi='docker rmi $(docker images -a -q)'
# stop all containres
	alias dstop='docker stop $(docker ps -a -q)'
# nuke all
	alias dnuke='
	dstop
	drmc
	drmi
	'
# alias dnet='cd ~/docker ; docker network create ; dcrec1 plexms ; dcup1 ; dcup1v'
# docker logs
	alias dlogg='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2-vpn.yml logs -tf --tail="50"'
# run docker-compose (github)
	alias drun="
	if [ \"\$HOSTNAME\" = docker12 ]; then
		echo && echo \"----  docker1: www & doc content  ---------------------------------------------------------------------\" && echo
		cd /tmp && rm -rf /tmp/docker && git clone git@github.com:bmilcs/docker.git /tmp/docker && cd /tmp/docker && rm -f ~/docker/docker-compose.yaml ~/docker/.env && cp 1docker-compose.yaml .env ~/docker/ && cd ~/dockerl &&  docker-compose up -d --remove-orphans
	else if [ \"\$HOSTNAME\" = docker123 ]; then
		
		cd /tmp && rm -rf /tmp/docker && git clone git@github.com:bmilcs/docker.git /tmp/docker && cd /tmp/docker && rm -f ~/docker/docker-compose.yaml ~/docker/.env && cp 2docker-compose.yaml .env ~/docker/ && cd ~/dockerl &&  docker-compose up -d --remove-orphans
	else
		echo \'error: wrong vm dummy!\'
  fi
	"

# list all dockers
	alias dps='docker ps -a'
# letsencrypt restart
	alias le="docker restart letsencrypt && docker logs -f letsencrypt"
	alias lel="dlog letsencrypt"
#----  docker  -----------------------------------------------------------------------------------------
	alias dexec='docker exec -ti'
	alias docps='docker ps -a'
	alias ddf='docker system df'
	# STACK UP AND DOWN
	alias dc1down='cd /nas/docker ; dcdown1v ; dcdown1'
	alias dc1up='cd /nas/docker ; docker network create traefik_proxy ; dcrec1 plexms ; dcup1 ; dcup1v'
	alias dc2down='cd /nas/docker ; dcdown2v ; dcdown2'
	alias dc2up='cd /nas/docker ; docker network create --gateway 192.168.90.1 --subnet 192.168.90.0/24 t2_proxy ; dcrec2 plexms ; dcup2 ; dcup2v'
	# DOCKER TRAEFIK 2
	alias dcrun2='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2.yml '
	alias dclogs2='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2.yml logs -tf --tail="50" '
	alias dcup2='dcrun2 up -d'
	alias dcdown2='dcrun2 down'
	alias dcrec2='dcrun2 up -d --force-recreate'
	alias dcstop2='dcrun2 stop'
	alias dcrestart2='dcrun2 restart '
		# DOCKER TRAEFIK 2 VPN
	alias dcrun2v='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2-vpn.yml '
	alias dclogs2v='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2-vpn.yml logs -tf --tail="50" '
	alias dcup2v='dcrun2v up -d'
	alias dcdown2v='dcrun2v down'
	alias dcrec2v='dcrun2v up -d --force-recreate'
	alias dcstop2v='dcrun2v stop'
	alias dcrestart2v='dcrun2v restart '
	alias dcpull2v='cd /nas/docker ; docker-compose -f /nas/docker/docker-compose-t2-vpn.yml  pull'
